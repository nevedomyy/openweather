// Mocks generated by Mockito 5.4.2 from annotations
// in openweather/test/features/home/bloc/home_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:openweather/core/models/app_response.dart' as _i2;
import 'package:openweather/features/home/repositories/home_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppResponse_0 extends _i1.SmartFake implements _i2.AppResponse {
  _FakeAppResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i3.HomeRepository {
  MockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AppResponse> getForecast({required String? city}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForecast,
          [],
          {#city: city},
        ),
        returnValue: _i4.Future<_i2.AppResponse>.value(_FakeAppResponse_0(
          this,
          Invocation.method(
            #getForecast,
            [],
            {#city: city},
          ),
        )),
      ) as _i4.Future<_i2.AppResponse>);
}
